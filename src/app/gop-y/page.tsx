'use client';

import { useState } from 'react';
import { SupabaseAuth } from '@/lib/supabaseAuth';
import { supabase } from '@/lib/supabase';

export default function FeedbackPage() {
  const [formData, setFormData] = useState({
    message: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle');
  const [errorMessage, setErrorMessage] = useState('');

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!formData.message.trim()) {
      setSubmitStatus('error');
      setErrorMessage('Vui l√≤ng nh·∫≠p n·ªôi dung g√≥p √Ω');
      return;
    }

    if (formData.message.length < 10) {
      setSubmitStatus('error');
      setErrorMessage('N·ªôi dung g√≥p √Ω ph·∫£i c√≥ √≠t nh·∫•t 10 k√Ω t·ª±');
      return;
    }

    if (formData.message.length > 5000) {
      setSubmitStatus('error');
      setErrorMessage('N·ªôi dung g√≥p √Ω kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 5000 k√Ω t·ª±');
      return;
    }

    setIsSubmitting(true);
    setSubmitStatus('idle');
    setErrorMessage('');

    try {
      // Get current user
      const { user } = await SupabaseAuth.getCurrentUser();
      
      // Create feedback document in Supabase
      const { error } = await supabase
        .from('feedback')
        .insert({
          message: formData.message.trim(),
          user_id: user?.id || null,
          user_type: user ? 'registered' : 'anonymous',
          status: 'pending',
          priority: 'medium',
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        });

      if (error) {
        throw new Error(`Failed to submit feedback: ${error.message}`);
      }

      setSubmitStatus('success');
      setFormData({ message: '' });
      
      // Auto redirect to personal feedback page after 2 seconds
      setTimeout(() => {
        window.location.href = '/tai-khoan/gop-y';
      }, 2000);
    } catch (error) {
      console.error('Error submitting feedback:', error);
      setSubmitStatus('error');
      setErrorMessage('Kh√¥ng th·ªÉ g·ª≠i g√≥p √Ω. Vui l√≤ng th·ª≠ l·∫°i sau.');
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-amber-50 via-white to-amber-100">
      <div className="max-w-4xl mx-auto px-4 py-8 sm:py-12">
        {/* Header */}
        <div className="text-center mb-8 sm:mb-12">
          <div className="w-16 h-16 sm:w-20 sm:h-20 lotus-gradient rounded-full flex items-center justify-center mx-auto mb-4 sm:mb-6">
            <span className="text-white text-2xl sm:text-3xl">üí¨</span>
          </div>
          <h1 className="text-3xl sm:text-4xl font-bold wisdom-text mb-4">G√≥p √Ω</h1>
          <p className="text-amber-700/80 text-lg max-w-2xl mx-auto">
            Ch√∫ng t√¥i lu√¥n l·∫Øng nghe v√† tr√¢n tr·ªçng m·ªçi g√≥p √Ω t·ª´ qu√Ω b·∫°n ƒë·ªçc
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Main Content */}
          <div className="lg:col-span-2 space-y-6">
            {/* About Section */}
            <div className="serene-card p-6 sm:p-8">
              <h2 className="text-xl sm:text-2xl font-semibold wisdom-text mb-4">V·ªÅ trang web n√†y</h2>
              <div className="space-y-4 text-amber-700/80">
                <p>
                  Ch√∫ng ta l√† nh·ªØng h·ªçc tr√≤ c·ªßa Tam Th√°nh ƒê∆∞·ªùng, th√¨ tr∆∞·ªõc l√† t·ª± ƒë·ªô sau ƒë√≥ l√† ƒë·ªô tha. N√™n h√£y lan t·ªèa √°nh s√°ng tr√≠ tu·ªá 
                  Ph·∫≠t ph√°p ƒë·∫øn v·ªõi m·ªçi ng∆∞·ªùi th√¥ng qua n·ªÅn t·∫£ng kinh s√°ch √¢m thanh. Nh·ªØng kinh s√°ch n√†y ƒë∆∞·ª£c chia s·∫ª mi·ªÖn ph√≠ v√† c√≥ th·ªÉ nghe tr√™n nhi·ªÅu thi·∫øt b·ªã kh√°c nhau.
                </p>
                <p>
                  <strong className="wisdom-text">&ldquo;Hoan ngh√™nh ·∫•n t·ªëng, chia s·∫ª l∆∞u th√¥ng ƒë·ªÉ gi√°o truy·ªÅn ƒë·∫°i ƒë·∫°o c·ªßa ƒë·ª©c Th√≠ch Ca M√¢u Ni t·ª´ ph·ª•!&rdquo;</strong>
                </p>
                <p>
                  M·ªçi g√≥p √Ω, ph·∫£n h·ªìi c·ªßa b·∫°n ƒë·ªÅu r·∫•t qu√Ω gi√° v√† s·∫Ω gi√∫p ch√∫ng t√¥i ho√†n thi·ªán h∆°n.
                </p>
              </div>
            </div>

            {/* Success Message */}
            {submitStatus === 'success' && (
              <div className="mb-6 p-4 bg-green-50 border border-green-200 rounded-lg">
                <div className="flex items-center gap-2 text-green-700">
                  <span className="text-lg">‚úÖ</span>
                  <div>
                    <div className="font-medium">G√≥p √Ω c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng. C·∫£m ∆°n b·∫°n!</div>
                    <div className="text-sm mt-1">
                      ƒêang chuy·ªÉn ƒë·∫øn trang &ldquo;G√≥p √Ω c·ªßa t√¥i&rdquo; trong 2 gi√¢y...
                    </div>
                  </div>
                </div>
              </div>
            )}

            {/* Error Message */}
            {submitStatus === 'error' && (
              <div className="mb-6 p-4 bg-red-50 border border-red-200 rounded-lg">
                <div className="flex items-center gap-2 text-red-700">
                  <span className="text-lg">‚ùå</span>
                  <span className="font-medium">{errorMessage}</span>
                </div>
              </div>
            )}

            {/* Feedback Form */}
            <div className="serene-card p-6 sm:p-8">
              <h2 className="text-xl sm:text-2xl font-semibold wisdom-text mb-6">G·ª≠i g√≥p √Ω</h2>
              <form onSubmit={handleSubmit} className="space-y-6">
                <div>
                  <label htmlFor="message" className="block text-sm font-medium wisdom-text mb-2">
                    N·ªôi dung g√≥p √Ω <span className="text-red-500">*</span>
                  </label>
                  <textarea
                    id="message"
                    name="message"
                    value={formData.message}
                    onChange={handleChange}
                    required
                    rows={8}
                    className="w-full px-4 py-3 border border-amber-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-transparent resize-none"
                    placeholder="Chia s·∫ª g√≥p √Ω, ƒë·ªÅ xu·∫•t ho·∫∑c b√°o c√°o l·ªói v·ªõi ch√∫ng t√¥i..."
                  />
                  <p className="text-xs text-amber-600/70 mt-1">
                    T·ªëi thi·ªÉu 10 k√Ω t·ª±, t·ªëi ƒëa 5000 k√Ω t·ª±
                  </p>
                </div>

                <button
                  type="submit"
                  disabled={isSubmitting}
                  className="w-full lotus-button py-3 px-6 disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  {isSubmitting ? (
                    <span className="flex items-center justify-center gap-2">
                      <span className="animate-spin">‚è≥</span>
                      <span>ƒêang g·ª≠i...</span>
                    </span>
                  ) : (
                    <span className="flex items-center justify-center gap-2">
                      <span>üí¨</span>
                      <span>G·ª≠i g√≥p √Ω</span>
                    </span>
                  )}
                </button>
              </form>
            </div>
          </div>

          {/* Sidebar */}
          <div className="space-y-6">
            {/* Contact Info */}
            <div className="serene-card p-6">
              <h3 className="text-lg font-semibold wisdom-text mb-4">Th√¥ng tin li√™n h·ªá</h3>
              <div className="space-y-3 text-amber-700/80">
                <div className="flex items-center gap-3">
                  <span className="text-amber-500">üìß</span>
                  <span>Email li√™n h·ªá</span>
                </div>
                <p className="text-amber-700/80">
                  Email: <a href="mailto:kinhsachamthanh@gmail.com" className="text-amber-600 hover:text-amber-700 font-medium">kinhsachamthanh@gmail.com</a>
                </p>
              </div>
            </div>

            {/* Tips */}
            <div className="serene-card p-6">
              <h3 className="text-lg font-semibold wisdom-text mb-4">üí° G·ª£i √Ω</h3>
              <div className="space-y-2 text-sm text-amber-700/80">
                <p>‚Ä¢ M√¥ t·∫£ chi ti·∫øt v·ªÅ v·∫•n ƒë·ªÅ b·∫°n g·∫∑p ph·∫£i</p>
                <p>‚Ä¢ ƒê·ªÅ xu·∫•t c·∫£i ti·∫øn cho website</p>
                <p>‚Ä¢ Chia s·∫ª tr·∫£i nghi·ªám s·ª≠ d·ª•ng</p>
                <p>‚Ä¢ B√°o c√°o l·ªói k·ªπ thu·∫≠t</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}